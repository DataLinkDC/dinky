#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Docker Build



on:
  workflow_dispatch:
    inputs:
      version:
        description: 'dinky version'
        required: true

jobs:
  build_releases:
    name: build releases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # maven编译
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository/*/*/*
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Check Style
        run: |
          ./mvnw -T 4C -B --no-snapshot-updates clean spotless:check
      - name: Build and Package
        run: |
          ./mvnw -B clean install \
                 -P prod,scala-2.12,all,web,maven-central,fast \
                 --no-snapshot-updates
  build_docker_dinky_image:
    name: build docker dinky  image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        url: [ registry.cn-hangzhou.aliyuncs.com ]
        include:
          - url: registry.cn-hangzhou.aliyuncs.com
            namespace: dinky
#          - url: docker.io
##            user: ${{ secrets.DOCKER_IO_USER }}
##            pass: ${{ secrets.DOCKER_IO_PASS }}
#            namespace: dinkydocker
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.url }}
          username: ${{ secrets.DOCKER_ALIYUN_USER }}
          password: ${{ secrets.DOCKER_ALIYUN_PASS }}
      - name: push docker dinky mysql image
        uses: docker/build-push-action@v2
        with:
          file: DockerfileMysql
          context: .
          push: true
          tags: ${{ matrix.url }}/${{ matrix.namespace }}/dinky-mysql-server