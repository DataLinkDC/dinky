spring:
  datasource:
    url: jdbc:mysql://${MYSQL_ADDR:127.0.0.1:3306}/${MYSQL_DATABASE:dlink}?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: ${MYSQL_USERNAME:dlink}
    password: ${MYSQL_PASSWORD:dlink}
    driver-class-name: com.mysql.cj.jdbc.Driver
  application:
    name: dlink
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    format:
      date: yyyy-MM-dd HH:mm:ss
    #json格式化全局配置
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss

  main:
    allow-circular-references: true

  #  默认使用内存缓存元数据信息，
  #  dlink支持redis缓存，如有需要请把simple改为redis，并打开下面的redis连接配置
  #  子配置项可以按需要打开或自定义配置
  cache:
    type: simple
  ##    如果type配置为redis，则该项可按需配置
  #    redis:
  ##      是否缓存空值，保存默认即可
  #      cache-null-values: false
  ##      缓存过期时间，24小时
  #      time-to-live: 86400


  #  flyway:
  #    enabled: false
  #    clean-disabled: true
  ##    baseline-on-migrate: true
  #    table: dlink_schema_history
  # Redis配置
  #sa-token如需依赖redis，请打开redis配置和pom.xml、dlink-admin/pom.xml中依赖
  # redis:
  #   host: localhost
  #   port: 6379
  #   password:
  #   database: 10
  #   jedis:
  #     pool:
  #       # 连接池最大连接数（使用负值表示没有限制）
  #       max-active: 50
  #       # 连接池最大阻塞等待时间（使用负值表示没有限制）
  #       max-wait: 3000
  #       # 连接池中的最大空闲连接数
  #       max-idle: 20
  #       # 连接池中的最小空闲连接数
  #       min-idle: 5
  #   # 连接超时时间（毫秒）
  #   timeout: 5000
  servlet:
    multipart:
      max-file-size: 524288000
      max-request-size: 524288000
      enabled: true
server:
  port: 8888

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.dlink.model
  global-config:
    db-config:
      id-type: auto
  configuration:
    ##### mybatis-plus打印完整sql(只适用于开发环境)
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

# Sa-Token 配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认10小时, -1代表永不过期
  timeout: 36000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false

knife4j:
  enable: true

dinky:
  dolphinscheduler:
    enabled: false
    # dolphinscheduler 地址
    url: http://127.0.0.1:5173/dolphinscheduler
    # dolphinscheduler 生成的token
    token: ad54eb8f57fadea95f52763517978b26
    # dolphinscheduler 中指定的项目名不区分大小写
    project-name: Dinky
    # Dolphinscheduler DinkyTask Address
    address: http://127.0.0.1:8888

  # python udf 需要用到的 python 执行环境
  python:
    path: python
