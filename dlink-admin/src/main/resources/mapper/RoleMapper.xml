<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlink.mapper.RoleMapper">
    <resultMap id="roleResultMap" type="com.dlink.model.Role">
        <id property="id" column="id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="roleCode" column="role_code"/>
        <result property="roleName" column="role_name"/>
        <result property="isDelete" column="is_delete"/>
        <result property="note" column="note"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="namespaces" ofType="com.dlink.model.Namespace"
                    resultMap="namespaceResultMap"></collection>
    </resultMap>
    <resultMap id="namespaceResultMap" type="com.dlink.model.Namespace">
        <id property="id" column="id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="namespaceCode" column="namespace_code"/>
        <result property="enabled" column="enabled"/>
        <result property="note" column="note"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <sql id="role">
        select dr.id
             , dr.tenant_id
             , dr.role_code
             , dr.role_name
             , dr.note
             , dr.create_time
             , dr.update_time
             , dn.id          as dn_id
             , dn.namespace_code
             , dn.enabled
             , dn.note           dn_note
             , dn.create_time as dn_create_time
             , dn.update_time    dn_update_time
        from dlink_role dr
                 join dlink_role_namespace drn
                      on dr.id = drn.role_id
                 join dlink_namespace dn
                      on drn.namespace_id = dn.id
    </sql>
    <select id="selectForProTable" resultType="com.dlink.model.Role">
        select
            a.*
        from dlink_role a
        <where>
            1=1
            <if test='param.tenantId!=null and param.tenantId!=""'>
                and tenant_id = '${param.tenantId}'
            </if>
            <if test='param.roleCode!=null and param.roleCode!=""'>
                and role_code = '${param.roleCode}'
            </if>
            <if test='param.roleName!=null and param.roleName!=""'>
                and role_name like "%${param.roleName}%"
            </if>
            <if test='param.createTime!=null and param.createTime!=""'>
                and create_time <![CDATA[>=]]> str_to_date( #{param.createTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test='param.updateTime!=null and param.updateTime!=""'>
                and update_time <![CDATA[>=]]> str_to_date( #{param.updateTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test='ew.sqlSegment!=null and ew.sqlSegment!="" and !ew.sqlSegment.startsWith(" ORDER BY")'>
                and
            </if>
            <if test='ew.sqlSegment!=null and ew.sqlSegment!=""'>
                ${ew.sqlSegment}
            </if>
        </where>
    </select>

    <select id="getRoleByIds" resultType="com.dlink.model.Role">
        select id
        ,tenant_id
        ,role_code
        ,role_name
        ,is_delete
        ,note
        ,create_time
        ,update_time
        from dlink_role
        where id in
        <foreach collection="roleIds" item="id" separator="," open="(" close=")" index="">
            #{id}
        </foreach>
    </select>

    <select id="getRoleByTenantIdAndIds" resultType="com.dlink.model.Role">
        select id
        ,tenant_id
        ,role_code
        ,role_name
        ,is_delete
        ,note
        ,create_time
        ,update_time
        from dlink_role
        <where>
            1=1
            <if test='tenantId!=null and tenantId!=""'>
                and tenant_id = '${tenantId}'
            </if>
            and id in
            <foreach collection="roleIds" item="id" separator="," open="(" close=")" index="">
                #{id}
            </foreach>
        </where>
    </select>
</mapper>