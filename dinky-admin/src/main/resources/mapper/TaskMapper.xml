<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~  Licensed to the Apache Software Foundation (ASF) under one or more
  ~  contributor license agreements.  See the NOTICE file distributed with
  ~  this work for additional information regarding copyright ownership.
  ~  The ASF licenses this file to You under the Apache License, Version 2.0
  ~  (the "License"); you may not use this file except in compliance with
  ~  the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dinky.mapper.TaskMapper">
    <select id="selectForProTable" resultType="org.dinky.data.model.Task">
        select
        a.*
        from
        dinky_task a
        <where>
            1=1
            <if test='param.name!=null and param.name!=""'>
                and a.name like "%${param.name}%"
            </if>
            <if test='param.createTime!=null and param.createTime!=""'>
                and a.create_time <![CDATA[>=]]> str_to_date( #{param.createTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test='param.updateTime!=null and param.updateTime!=""'>
                and a.update_time <![CDATA[>=]]> str_to_date( #{param.updateTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test='ew.sqlSegment!=null and ew.sqlSegment!="" and !ew.sqlSegment.startsWith(" ORDER BY")'>
                and
            </if>
            <if test='ew.sqlSegment!=null and ew.sqlSegment!=""'>
                ${ew.sqlSegment}
            </if>
        </where>
    </select>


    <select id="queryAllSizeByName" resultType="java.lang.Integer">
        SELECT count(*)
        from dinky_task
        where `name` REGEXP '${name}_[0-9]$'
    </select>

    <select id="getTaskByNameAndTenantId" resultType="org.dinky.data.model.Task">
        select *
        from dinky_task
        where 1 = 1
          and name = #{name}
          and tenant_id = #{tenantId}
    </select>

    <select id="getTenantByTaskId" resultType="java.lang.Integer">
        select tenant_id
        from dinky_task
        where id = #{id}
    </select>

    <select id="queryOnLineTaskByDoneStatus" resultType="org.dinky.data.model.Task">
        select t.id as id, t.name as name
        from dinky_task t
        left join dinky_catalogue c on c.task_id = t.id
        left join dinky_job_instance i on i.id = t.job_instance_id
        where
        c.parent_id in
        <foreach collection="parentIds" item="parentId" open="(" close=")" separator=",">
            #{parentId}
        </foreach>
        and c.task_id is not null
        and c.is_leaf = 1
        and t.step in
        <foreach collection="stepIds" item="stepId" open="(" close=")" separator=",">
            #{stepId}
        </foreach>
        and t.enabled = 1
        <if test="includeNull == true">
            and ((i.status is null) or (i.status in <foreach collection="jobStatuses" item="jobStatus" open="("
                                                             close=")" separator=",">
            #{jobStatus}
        </foreach>))
        </if>
        <if test="includeNull != true">
            and i.status in
            <foreach collection="jobStatuses" item="jobStatus" open="(" close=")" separator=",">
                #{jobStatus}
            </foreach>
        </if>
    </select>

    <select id="getTaskOnlineRate" resultType="org.dinky.data.model.JobTypeOverView">
        select dialect jobType,
        round(coalesce(sum(case when step = 5 then 1 else 0 end) /
        sum(case when step <![CDATA[ < ]]> 5 then 1 else 0 end) * 100, 0), 2) rate
        from dinky_task
        where enabled = 1
        group by dialect
    </select>


    <select id="getJobStreamingOrBatchModelOverview" resultType="org.dinky.data.model.JobModelOverview">
        select sum(case when batch_model = 'streaming' then cnt else 0 end) as streamingJobCount,
               sum(case when batch_model = 'batch' then cnt else 0 end)     as batchJobCount
        from (select case a.batch_model when 0 then 'streaming' when 1 then 'batch' end as batch_model,
                     count(1)                                                           as cnt
              from dinky_task a
              where a.batch_model is not null
                and a.dialect in (
                                  'FlinkSql',
                                  'FlinkJar',
                                  'KubernetesApplication')
              group by a.batch_model) a
        ;
    </select>


</mapper>
